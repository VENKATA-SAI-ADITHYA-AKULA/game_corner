import tkinter as tk
from tkinter import messagebox

def check_winner(board, player):
    # Check rows, columns, and diagonals for a win
    for i in range(3):
        if all(board[i][j] == player for j in range(3)) or all(board[j][i] == player for j in range(3)):
            return True
    if all(board[i][i] == player for i in range(3)) or all(board[i][2 - i] == player for i in range(3)):
        return True
    return False

def is_draw(board):
    return all(cell != " " for row in board for cell in row)

def make_move(row, col):
    global current_player
    if board[row][col] == " " and not game_over:
        board[row][col] = current_player
        buttons[row][col].config(text=current_player)
        if check_winner(board, current_player):
            messagebox.showinfo("Tic-Tac-Toe", f"Player {current_player} wins!")
            reset_game()
        elif is_draw(board):
            messagebox.showinfo("Tic-Tac-Toe", "It's a draw!")
            reset_game()
        else:
            current_player = "O" if current_player == "X" else "X"

def reset_game():
    global board, current_player, game_over
    board = [[" " for _ in range(3)] for _ in range(3)]
    for i in range(3):
        for j in range(3):
            buttons[i][j].config(text=" ", state=tk.NORMAL)
    current_player = "X"
    game_over = False

# Create the main window
root = tk.Tk()
root.title("Tic-Tac-Toe")

# Initialize game variables
board = [[" " for _ in range(3)] for _ in range(3)]
current_player = "X"
game_over = False

# Create buttons for the game grid
buttons = [[None, None, None], [None, None, None], [None, None, None]]
for i in range(3):
    for j in range(3):
        buttons[i][j] = tk.Button(root, text=" ", width=10, height=3, command=lambda row=i, col=j: make_move(row, col))
        buttons[i][j].grid(row=i, column=j)

# Create a "Reset" button
reset_button = tk.Button(root, text="Reset", command=reset_game)
reset_button.grid(row=3, column=0, columnspan=3)

# Start the game
root.mainloop()
